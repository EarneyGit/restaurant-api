{
  "baseUrl": "http://localhost:5000/api",
  "description": "Authentication module for the Restaurant API",
  "version": "1.0.0",
  "endpoints": {
    "register": {
      "url": "/auth/register",
      "method": "POST",
      "description": "Register a new user in the system",
      "access": "Public",
      "request": {
        "body": {
          "name": "string (required) - User's full name, max 50 characters",
          "email": "string (required) - Valid email address",
          "password": "string (required) - Minimum 6 characters",
          "phone": "string (optional) - Phone number, max 20 characters",
          "address": "string (optional) - Address, max 200 characters",
          "roleId": "string (optional) - MongoDB ObjectId of the role"
        },
        "example": {
          "name": "John Doe",
          "email": "john@example.com",
          "password": "password123",
          "phone": "+1234567890",
          "address": "123 Main St, City",
          "roleId": "60d3b41c9f7cf31234567890"
        }
      },
      "responses": {
        "201": {
          "description": "User registered successfully",
          "example": {
            "success": true,
            "message": "User registered successfully",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "user": {
              "id": "60d3b41c9f7cf31234567890",
              "name": "John Doe",
              "email": "john@example.com",
              "role": "user"
            }
          }
        },
        "400": {
          "description": "Bad request",
          "examples": [
            {
              "success": false,
              "message": "Please provide name, email and password"
            },
            {
              "success": false,
              "message": "Email already registered"
            },
            {
              "success": false,
              "message": "Invalid role ID provided"
            }
          ]
        }
      }
    },
    "login": {
      "url": "/auth/login",
      "method": "POST",
      "description": "Authenticate user and get token",
      "access": "Public",
      "request": {
        "body": {
          "email": "string (required) - Registered email address",
          "password": "string (required) - User password"
        },
        "example": {
          "email": "john@example.com",
          "password": "password123"
        }
      },
      "responses": {
        "200": {
          "description": "Login successful",
          "example": {
            "success": true,
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "user": {
              "id": "60d3b41c9f7cf31234567890",
              "name": "John Doe",
              "email": "john@example.com",
              "role": "manager",
              "roleDetails": {
                "id": "60d3b41c9f7cf31234567891",
                "name": "Branch Manager",
                "slug": "manager"
              },
              "branchId": "60d3b41c9f7cf31234567892",
              "branch": {
                "name": "Downtown Branch",
                "address": "456 Main St, City"
              }
            }
          }
        },
        "400": {
          "description": "Bad request",
          "example": {
            "success": false,
            "message": "Please provide an email and password"
          }
        },
        "401": {
          "description": "Unauthorized",
          "examples": [
            {
              "success": false,
              "message": "Invalid credentials"
            },
            {
              "success": false,
              "message": "Your account has been deactivated"
            },
            {
              "success": false,
              "message": "Your account role has been disabled"
            }
          ]
        }
      }
    },
    "getMe": {
      "url": "/auth/me",
      "method": "GET",
      "description": "Get current logged in user details",
      "access": "Private (requires authentication token)",
      "request": {
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "responses": {
        "200": {
          "description": "Successfully retrieved user details",
          "example": {
            "success": true,
            "data": {
              "id": "60d3b41c9f7cf31234567890",
              "name": "John Doe",
              "email": "john@example.com",
              "phone": "+1234567890",
              "address": "123 Main St, City",
              "role": {
                "name": "Branch Manager",
                "slug": "manager"
              },
              "branch": {
                "name": "Downtown Branch",
                "address": "456 Main St, City"
              },
              "isActive": true,
              "lastLogin": "2024-05-17T10:30:00.000Z",
              "createdAt": "2024-05-01T00:00:00.000Z",
              "updatedAt": "2024-05-17T10:30:00.000Z"
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "example": {
            "success": false,
            "message": "Not authorized to access this route"
          }
        }
      }
    },
    "logout": {
      "url": "/auth/logout",
      "method": "GET",
      "description": "Logout current user",
      "access": "Private (requires authentication token)",
      "request": {
        "headers": {
          "Authorization": "Bearer <token>"
        }
      },
      "responses": {
        "200": {
          "description": "Successfully logged out",
          "example": {
            "success": true,
            "message": "Successfully logged out"
          }
        },
        "401": {
          "description": "Unauthorized",
          "example": {
            "success": false,
            "message": "Not authorized to access this route"
          }
        }
      }
    }
  },
  "authentication": {
    "type": "JWT (JSON Web Token)",
    "tokenExpiry": "30 days",
    "tokenFormat": "Bearer <token>",
    "usage": "Include the token in the Authorization header for protected routes",
    "example": {
      "headers": {
        "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      }
    }
  },
  "roles": {
    "description": "The system supports different user roles with varying levels of access",
    "types": [
      {
        "name": "Admin",
        "slug": "admin",
        "description": "Full system access, can manage all users and operations"
      },
      {
        "name": "Manager",
        "slug": "manager",
        "description": "Branch-level access, can manage staff and operations within their branch"
      },
      {
        "name": "Staff",
        "slug": "staff",
        "description": "Limited access to branch operations"
      },
      {
        "name": "User",
        "slug": "user",
        "description": "Basic access for customers"
      }
    ]
  }
} 