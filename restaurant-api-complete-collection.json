{
  "info": {
    "name": "Restaurant API - Complete Collection v2.0",
    "description": "Complete collection for Restaurant Management System API with all modules including Attributes and sample payloads",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.0.0"
  },
  "variables": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "guest_{{$timestamp}}_{{$randomAlphaNumeric}}",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "branchId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "reservationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "roleId",
      "value": "",
      "type": "string"
    },
    {
      "key": "tempToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "resetToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "attributeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "attributeItemId",
      "value": "",
      "type": "string"
    },
    {
      "key": "cartItemId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Send OTP for Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('OTP sent successfully', function () {",
                  "        pm.expect(pm.response.json().success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/send-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "send-otp"]
            }
          }
        },
        {
          "name": "Verify OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('tempToken', jsonData.token);",
                  "    pm.test('OTP verified successfully', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "        pm.expect(jsonData.token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Complete Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('token', jsonData.token);",
                  "    pm.environment.set('userId', jsonData.user.id);",
                  "    pm.test('Registration complete successful', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"token\": \"{{tempToken}}\",\n  \"name\": \"John Doe\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567890\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('token', jsonData.token);",
                  "    pm.environment.set('userId', jsonData.user.id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Send Forgot Password OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('Forgot password OTP sent successfully', function () {",
                  "        pm.expect(pm.response.json().success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password-otp"]
            }
          }
        },
        {
          "name": "Verify Forgot Password OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('resetToken', jsonData.token);",
                  "    pm.test('OTP verified successfully', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "        pm.expect(jsonData.token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"newpassword123\",\n  \"confirmPassword\": \"newpassword123\",\n  \"token\": \"{{resetToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Branch Management",
      "item": [
        {
          "name": "Get All Branches",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches"]
            }
          }
        },
        {
          "name": "Get Branch by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Create Branch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('branchId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Downtown Branch\",\n  \"code\": \"DTB001\",\n  \"aboutUs\": \"Our flagship downtown location with modern amenities and excellent service.\",\n  \"address\": {\n    \"street\": \"456 Restaurant Ave\",\n    \"addressLine2\": \"Suite 101\",\n    \"city\": \"New York\",\n    \"county\": \"Manhattan\",\n    \"state\": \"NY\",\n    \"postalCode\": \"10002\",\n    \"country\": \"United Kingdom\"\n  },\n  \"contact\": {\n    \"phone\": \"+1234567891\",\n    \"email\": \"downtown@restaurant.com\",\n    \"telephone\": \"+1234567892\"\n  },\n  \"location\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.9857, 40.7484]\n  },\n  \"openingHours\": [\n    { \"day\": \"monday\", \"isOpen\": true, \"openTime\": \"09:00\", \"closeTime\": \"22:00\" },\n    { \"day\": \"tuesday\", \"isOpen\": true, \"openTime\": \"09:00\", \"closeTime\": \"22:00\" },\n    { \"day\": \"wednesday\", \"isOpen\": true, \"openTime\": \"09:00\", \"closeTime\": \"22:00\" },\n    { \"day\": \"thursday\", \"isOpen\": true, \"openTime\": \"09:00\", \"closeTime\": \"22:00\" },\n    { \"day\": \"friday\", \"isOpen\": true, \"openTime\": \"09:00\", \"closeTime\": \"23:00\" },\n    { \"day\": \"saturday\", \"isOpen\": true, \"openTime\": \"10:00\", \"closeTime\": \"23:00\" },\n    { \"day\": \"sunday\", \"isOpen\": true, \"openTime\": \"10:00\", \"closeTime\": \"21:00\" }\n  ],\n  \"isActive\": true,\n  \"capacity\": 50,\n  \"description\": \"Modern restaurant with outdoor seating\",\n  \"isCollectionEnabled\": true,\n  \"isDeliveryEnabled\": true,\n  \"isTableOrderingEnabled\": true,\n  \"facilities\": [\"wifi\", \"parking\", \"delivery\", \"takeaway\", \"outdoor\"],\n  \"maxCapacity\": 60\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/branches",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches"]
            }
          }
        },
        {
          "name": "Update Branch",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Downtown Branch - Updated\",\n  \"contact\": {\n    \"phone\": \"+1234567892\"\n  },\n  \"capacity\": 60,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Delete Branch",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Category Management",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        },
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('categoryId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Main Course\",\n  \"description\": \"Delicious main course dishes\",\n  \"slug\": \"main-course\",\n  \"isActive\": true,\n  \"displayOrder\": 1,\n  \"parentCategory\": null,\n  \"branchId\": \"{{branchId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Main Course - Updated\",\n  \"description\": \"Updated description for main course\",\n  \"displayOrder\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Product Management",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products?page=1&limit=10&category={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "category",
                  "value": "{{categoryId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('productId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Chicken Biryani\",\n  \"description\": \"Aromatic basmati rice cooked with tender chicken and traditional spices\",\n  \"price\": 18.99,\n  \"category\": \"{{categoryId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"images\": [],\n  \"allergens\": {\n    \"contains\": [\"gluten\", \"dairy\"],\n    \"mayContain\": [\"nuts\"]\n  },\n  \"availability\": {\n    \"monday\": true,\n    \"tuesday\": true,\n    \"wednesday\": true,\n    \"thursday\": true,\n    \"friday\": true,\n    \"saturday\": true,\n    \"sunday\": true\n  },\n  \"delivery\": true,\n  \"collection\": true,\n  \"dineIn\": true,\n  \"hideItem\": false,\n  \"weight\": \"450g\",\n  \"calorificValue\": 650,\n  \"stockManagement\": {\n    \"isManaged\": true,\n    \"quantity\": 50,\n    \"lowStockThreshold\": 10\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            },
            "description": "Create new product. Requires admin authentication. Admin can only create products for their branch."
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Chicken Biryani - Premium\",\n  \"price\": 21.99,\n  \"description\": \"Premium Chicken Biryani with saffron and premium basmati rice\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            },
            "description": "Update product. Requires admin authentication. Admin can only update products from their branch."
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            },
            "description": "Delete product. Requires admin authentication. Admin can only delete products from their branch."
          }
        },
        {
          "name": "Get Popular Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/popular?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "popular"],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Bulk Update Stock",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"products\": [\n    {\n      \"id\": \"{{productId}}\",\n      \"isManaged\": true,\n      \"quantity\": 25\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/stock/bulk-update",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "stock", "bulk-update"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Attribute Management",
      "item": [
        {
          "name": "Get All Attributes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/attributes?branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes"],
              "query": [
                {
                  "key": "branchId",
                  "value": "{{branchId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Attribute by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/attributes/{{attributeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes", "{{attributeId}}"]
            }
          }
        },
        {
          "name": "Create Attribute",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('attributeId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Beverages\",\n  \"displayOrder\": 1,\n  \"type\": \"single\",\n  \"requiresSelection\": true,\n  \"availableDays\": [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n  \"isActive\": true,\n  \"description\": \"Choose your preferred beverage to accompany your meal\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/attributes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes"]
            }
          }
        },
        {
          "name": "Update Attribute",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Beverages - Updated\",\n  \"type\": \"multiple\",\n  \"requiresSelection\": false,\n  \"description\": \"Choose one or more beverages to accompany your meal\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/attributes/{{attributeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes", "{{attributeId}}"]
            }
          }
        },
        {
          "name": "Delete Attribute",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/attributes/{{attributeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes", "{{attributeId}}"]
            }
          }
        },
        {
          "name": "Get Attributes by Branch",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/attributes/branch/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes", "branch", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Reorder Attributes",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"attributeOrders\": [\n    {\n      \"id\": \"{{attributeId}}\",\n      \"displayOrder\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/attributes/reorder",
              "host": ["{{baseUrl}}"],
              "path": ["api", "attributes", "reorder"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Product Attribute Items",
      "item": [
        {
          "name": "Get All Product Attribute Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items?productId={{productId}}&attributeId={{attributeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items"],
              "query": [
                {
                  "key": "productId",
                  "value": "{{productId}}"
                },
                {
                  "key": "attributeId",
                  "value": "{{attributeId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product Attribute Item by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/{{attributeItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "{{attributeItemId}}"]
            }
          }
        },
        {
          "name": "Create Product Attribute Item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('attributeItemId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"attributeId\": \"{{attributeId}}\",\n  \"name\": \"Coca Cola\",\n  \"price\": 2.50,\n  \"displayOrder\": 1,\n  \"isActive\": true,\n  \"description\": \"Classic Coca Cola 330ml\",\n  \"stockManagement\": {\n    \"isManaged\": true,\n    \"quantity\": 100,\n    \"lowStockThreshold\": 20\n  },\n  \"availability\": {\n    \"monday\": true,\n    \"tuesday\": true,\n    \"wednesday\": true,\n    \"thursday\": true,\n    \"friday\": true,\n    \"saturday\": true,\n    \"sunday\": true\n  },\n  \"allergens\": {\n    \"contains\": [],\n    \"mayContain\": []\n  },\n  \"calorificValue\": 139,\n  \"weight\": \"330ml\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items"]
            }
          }
        },
        {
          "name": "Create Product Attribute Item with Image",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('attributeItemId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "productId",
                  "value": "{{productId}}",
                  "type": "text"
                },
                {
                  "key": "attributeId",
                  "value": "{{attributeId}}",
                  "type": "text"
                },
                {
                  "key": "name",
                  "value": "Pepsi",
                  "type": "text"
                },
                {
                  "key": "price",
                  "value": "2.25",
                  "type": "text"
                },
                {
                  "key": "displayOrder",
                  "value": "2",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Pepsi 330ml can",
                  "type": "text"
                },
                {
                  "key": "stockManagement",
                  "value": "{\"isManaged\": true, \"quantity\": 80, \"lowStockThreshold\": 15}",
                  "type": "text"
                },
                {
                  "key": "availability",
                  "value": "{\"monday\": true, \"tuesday\": true, \"wednesday\": true, \"thursday\": true, \"friday\": true, \"saturday\": true, \"sunday\": true}",
                  "type": "text"
                },
                {
                  "key": "image",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items"]
            }
          }
        },
        {
          "name": "Update Product Attribute Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Coca Cola - Updated\",\n  \"price\": 2.75,\n  \"description\": \"Classic Coca Cola 330ml - Premium\",\n  \"stockManagement\": {\n    \"quantity\": 120\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/{{attributeItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "{{attributeItemId}}"]
            }
          }
        },
        {
          "name": "Delete Product Attribute Item",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/{{attributeItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "{{attributeItemId}}"]
            }
          }
        },
        {
          "name": "Get Attribute Items by Product",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/product/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "product", "{{productId}}"]
            }
          }
        },
        {
          "name": "Get Attribute Items by Attribute",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/attribute/{{attributeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "attribute", "{{attributeId}}"]
            }
          }
        },
        {
          "name": "Bulk Create Attribute Items",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"attributeId\": \"{{attributeId}}\",\n  \"items\": [\n    {\n      \"name\": \"Sprite\",\n      \"price\": 2.25,\n      \"displayOrder\": 3,\n      \"description\": \"Sprite 330ml can\",\n      \"stockManagement\": {\n        \"isManaged\": true,\n        \"quantity\": 60,\n        \"lowStockThreshold\": 10\n      }\n    },\n    {\n      \"name\": \"Orange Juice\",\n      \"price\": 3.50,\n      \"displayOrder\": 4,\n      \"description\": \"Fresh orange juice 250ml\",\n      \"stockManagement\": {\n        \"isManaged\": true,\n        \"quantity\": 30,\n        \"lowStockThreshold\": 5\n      }\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "bulk"]
            }
          }
        },
        {
          "name": "Update Attribute Item Stock",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 50,\n  \"operation\": \"set\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/product-attribute-items/{{attributeItemId}}/stock",
              "host": ["{{baseUrl}}"],
              "path": ["api", "product-attribute-items", "{{attributeItemId}}", "stock"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Cart Management (Updated with Attributes)",
      "item": [
        {
          "name": "Get Cart (Guest)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        },
        {
          "name": "Get Cart (Authenticated)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        },
        {
          "name": "Add Item to Cart (Basic)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.items && jsonData.data.items.length > 0) {",
                  "        pm.environment.set('cartItemId', jsonData.data.items[0].id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 1,\n  \"selectedOptions\": {\n    \"size\": \"Regular\",\n    \"spiceLevel\": \"Medium\"\n  },\n  \"specialRequirements\": \"No onions please\",\n  \"branchId\": \"{{branchId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items"]
            }
          }
        },
        {
          "name": "Add Item to Cart with Attributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data && jsonData.data.items && jsonData.data.items.length > 0) {",
                  "        pm.environment.set('cartItemId', jsonData.data.items[0].id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 2,\n  \"selectedOptions\": {\n    \"size\": \"Large\",\n    \"spiceLevel\": \"Hot\"\n  },\n  \"specialRequirements\": \"Extra spicy, no garlic\",\n  \"branchId\": \"{{branchId}}\",\n  \"selectedAttributes\": [\n    {\n      \"attributeId\": \"{{attributeId}}\",\n      \"attributeName\": \"Beverages\",\n      \"attributeType\": \"single\",\n      \"selectedItems\": [\n        {\n          \"itemId\": \"{{attributeItemId}}\",\n          \"itemName\": \"Coca Cola\",\n          \"itemPrice\": 2.50,\n          \"quantity\": 1\n        }\n      ]\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items"]
            }
          }
        },
        {
          "name": "Add Item with Multiple Attributes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 1,\n  \"selectedOptions\": {\n    \"size\": \"Family\",\n    \"spiceLevel\": \"Mild\"\n  },\n  \"specialRequirements\": \"Family pack for 4 people\",\n  \"branchId\": \"{{branchId}}\",\n  \"selectedAttributes\": [\n    {\n      \"attributeId\": \"{{attributeId}}\",\n      \"attributeName\": \"Beverages\",\n      \"attributeType\": \"multiple\",\n      \"selectedItems\": [\n        {\n          \"itemId\": \"{{attributeItemId}}\",\n          \"itemName\": \"Coca Cola\",\n          \"itemPrice\": 2.50,\n          \"quantity\": 2\n        },\n        {\n          \"itemId\": \"attributeItem2Id\",\n          \"itemName\": \"Sprite\",\n          \"itemPrice\": 2.25,\n          \"quantity\": 2\n        }\n      ]\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items"]
            }
          }
        },
        {
          "name": "Update Cart Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 3,\n  \"specialRequirements\": \"Updated: Make it extra spicy and no garlic\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/{{cartItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "{{cartItemId}}"]
            }
          }
        },
        {
          "name": "Remove Item from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/{{cartItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "{{cartItemId}}"]
            }
          }
        },
        {
          "name": "Update Delivery Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderType\": \"pickup\",\n  \"branchId\": \"{{branchId}}\",\n  \"deliveryFee\": 0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/delivery",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "delivery"]
            }
          }
        },
        {
          "name": "Get Cart Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/summary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "summary"]
            }
          }
        },
        {
          "name": "Merge Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{sessionId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/merge",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "merge"]
            }
          }
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Order Management (Updated with Attributes)",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            },
            "description": "Get all orders filtered by admin's branch. Requires authentication."
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            },
            "description": "Get single order. Admin can only access orders from their branch."
          }
        },
        {
          "name": "Create Order (Basic)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('orderId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": \"{{userId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"products\": [\n    {\n      \"product\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"price\": 18.99,\n      \"notes\": \"Medium spice level\"\n    }\n  ],\n  \"deliveryMethod\": \"delivery\",\n  \"deliveryAddress\": {\n    \"street\": \"123 Customer St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"postalCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"paymentMethod\": \"card\",\n  \"paymentStatus\": \"pending\",\n  \"customerNotes\": \"Ring doorbell twice\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Create Order with Attributes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('orderId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": \"{{userId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"products\": [\n    {\n      \"product\": \"{{productId}}\",\n      \"quantity\": 1,\n      \"price\": 18.99,\n      \"notes\": \"Large portion with extra spice\",\n      \"selectedAttributes\": [\n        {\n          \"attributeId\": \"{{attributeId}}\",\n          \"attributeName\": \"Beverages\",\n          \"attributeType\": \"single\",\n          \"selectedItems\": [\n            {\n              \"itemId\": \"{{attributeItemId}}\",\n              \"itemName\": \"Coca Cola\",\n              \"itemPrice\": 2.50,\n              \"quantity\": 1\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"deliveryMethod\": \"delivery\",\n  \"deliveryAddress\": {\n    \"street\": \"456 Oak Avenue\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"postalCode\": \"10002\",\n    \"country\": \"USA\",\n    \"notes\": \"Apartment 3B\"\n  },\n  \"paymentMethod\": \"card\",\n  \"paymentStatus\": \"pending\",\n  \"customerNotes\": \"Please call when arriving\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Create Order with Multiple Attributes",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user\": \"{{userId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"products\": [\n    {\n      \"product\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"price\": 18.99,\n      \"notes\": \"Family pack order\",\n      \"selectedAttributes\": [\n        {\n          \"attributeId\": \"{{attributeId}}\",\n          \"attributeName\": \"Beverages\",\n          \"attributeType\": \"multiple\",\n          \"selectedItems\": [\n            {\n              \"itemId\": \"{{attributeItemId}}\",\n              \"itemName\": \"Coca Cola\",\n              \"itemPrice\": 2.50,\n              \"quantity\": 2\n            },\n            {\n              \"itemId\": \"attributeItem2Id\",\n              \"itemName\": \"Sprite\",\n              \"itemPrice\": 2.25,\n              \"quantity\": 2\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"deliveryMethod\": \"pickup\",\n  \"paymentMethod\": \"cash\",\n  \"paymentStatus\": \"pending\",\n  \"customerNotes\": \"Will pick up at 7 PM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Update Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"processing\",\n  \"estimatedDeliveryTime\": \"2024-01-15T19:30:00.000Z\",\n  \"paymentStatus\": \"paid\",\n  \"internalNotes\": \"Customer confirmed payment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            },
            "description": "Update order status. Admin can only update orders from their branch."
          }
        },
        {
          "name": "Get My Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/myorders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "myorders"]
            },
            "description": "Get orders for authenticated user."
          }
        },
        {
          "name": "Get Today's Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/today",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "today"]
            },
            "description": "Get today's orders filtered by admin's branch."
          }
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            },
            "description": "Delete order. Requires admin privileges."
          }
        }
      ]
    },
    {
      "name": "9. User Management",
      "item": [
        {
          "name": "Get Ordering Times",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/ordering-times/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ordering-times", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Update Weekly Schedule",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"weeklySchedule\": {\n    \"monday\": {\n      \"isCollectionAllowed\": true,\n      \"isDeliveryAllowed\": true,\n      \"isTableOrderingAllowed\": false,\n      \"defaultTimes\": {\n        \"start\": \"11:45\",\n        \"end\": \"21:50\"\n      },\n      \"collection\": {\n        \"leadTime\": 20,\n        \"displayedTime\": \"12:10\"\n      },\n      \"delivery\": {\n        \"useDifferentTimes\": false,\n        \"leadTime\": 45,\n        \"displayedTime\": \"12:30\"\n      }\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ordering-times/{{branchId}}/weekly-schedule",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ordering-times", "{{branchId}}", "weekly-schedule"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate session ID if not set",
          "if (!pm.environment.get('sessionId')) {",
          "    pm.environment.set('sessionId', 'guest_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9));",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test scripts",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has proper JSON structure', function () {",
          "    if (pm.response.code !== 204) {",
          "        pm.response.to.have.jsonBody();",
          "        pm.expect(pm.response.json()).to.have.property('success');",
          "    }",
          "});"
        ]
      }
    }
  ]
}