{
  "info": {
    "name": "Restaurant API - Complete Collection",
    "description": "Complete collection for Restaurant Management System API with all modules and sample payloads",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variables": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "guest_{{$timestamp}}_{{$randomAlphaNumeric}}",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "categoryId",
      "value": "",
      "type": "string"
    },
    {
      "key": "branchId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "reservationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "roleId",
      "value": "",
      "type": "string"
    },
    {
      "key": "tempToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "resetToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Send OTP for Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('OTP sent successfully', function () {",
                  "        pm.expect(pm.response.json().success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/send-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "send-otp"]
            }
          }
        },
        {
          "name": "Verify OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('tempToken', jsonData.token);",
                  "    pm.test('OTP verified successfully', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "        pm.expect(jsonData.token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Complete Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('token', jsonData.token);",
                  "    pm.environment.set('userId', jsonData.user.id);",
                  "    pm.test('Registration complete successful', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"token\": \"{{tempToken}}\",\n  \"name\": \"John Doe\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567890\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('token', jsonData.token);",
                  "    pm.environment.set('userId', jsonData.user.id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        },
        {
          "name": "Send Forgot Password OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.test('Forgot password OTP sent successfully', function () {",
                  "        pm.expect(pm.response.json().success).to.be.true;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password-otp"]
            }
          }
        },
        {
          "name": "Verify Forgot Password OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('resetToken', jsonData.token);",
                  "    pm.test('OTP verified successfully', function () {",
                  "        pm.expect(jsonData.success).to.be.true;",
                  "        pm.expect(jsonData.token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-otp"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"password\": \"newpassword123\",\n  \"confirmPassword\": \"newpassword123\",\n  \"token\": \"{{resetToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "2. Branch Management",
      "item": [
        {
          "name": "Get All Branches",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches"]
            }
          }
        },
        {
          "name": "Get Branch by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Create Branch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('branchId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Downtown Branch\",\n  \"address\": {\n    \"street\": \"456 Restaurant Ave\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10002\",\n    \"country\": \"USA\"\n  },\n  \"phone\": \"+1234567891\",\n  \"email\": \"downtown@restaurant.com\",\n  \"location\": {\n    \"type\": \"Point\",\n    \"coordinates\": [-73.9857, 40.7484]\n  },\n  \"operatingHours\": {\n    \"monday\": { \"open\": \"09:00\", \"close\": \"22:00\", \"closed\": false },\n    \"tuesday\": { \"open\": \"09:00\", \"close\": \"22:00\", \"closed\": false },\n    \"wednesday\": { \"open\": \"09:00\", \"close\": \"22:00\", \"closed\": false },\n    \"thursday\": { \"open\": \"09:00\", \"close\": \"22:00\", \"closed\": false },\n    \"friday\": { \"open\": \"09:00\", \"close\": \"23:00\", \"closed\": false },\n    \"saturday\": { \"open\": \"10:00\", \"close\": \"23:00\", \"closed\": false },\n    \"sunday\": { \"open\": \"10:00\", \"close\": \"21:00\", \"closed\": false }\n  },\n  \"deliveryRadius\": 5,\n  \"isActive\": true,\n  \"features\": [\"delivery\", \"pickup\", \"dine-in\"],\n  \"manager\": \"John Manager\",\n  \"capacity\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/branches",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches"]
            }
          }
        },
        {
          "name": "Update Branch",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Downtown Branch - Updated\",\n  \"phone\": \"+1234567892\",\n  \"capacity\": 60,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        },
        {
          "name": "Get Branches in Radius",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches/radius/10001/5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "radius", "10001", "5"]
            }
          }
        },
        {
          "name": "Update Branch Settings",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deliveryRadius\": 7,\n  \"isActive\": true,\n  \"features\": [\"delivery\", \"pickup\", \"dine-in\", \"catering\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}/settings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}", "settings"]
            }
          }
        },
        {
          "name": "Delete Branch",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/branches/{{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "branches", "{{branchId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Cart Management",
      "item": [
        {
          "name": "Get Cart (Guest)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        },
        {
          "name": "Get Cart (Authenticated)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        },
        {
          "name": "Add Item to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 2,\n  \"selectedOptions\": {\n    \"size\": \"Large\",\n    \"toppings\": \"Extra Cheese\",\n    \"crust\": \"Thin\"\n  },\n  \"specialRequirements\": \"No onions please, extra spicy\",\n  \"branchId\": \"{{branchId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items"]
            }
          }
        },
        {
          "name": "Update Cart Item",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"quantity\": 3,\n  \"specialRequirements\": \"Updated: Make it extra spicy and no garlic\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/cartItemId",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "cartItemId"]
            }
          }
        },
        {
          "name": "Remove Item from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/items/cartItemId",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "items", "cartItemId"]
            }
          }
        },
        {
          "name": "Update Delivery Settings",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderType\": \"pickup\",\n  \"branchId\": \"{{branchId}}\",\n  \"deliveryFee\": 0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/delivery",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "delivery"]
            }
          }
        },
        {
          "name": "Get Cart Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart/summary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "summary"]
            }
          }
        },
        {
          "name": "Merge Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{sessionId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/cart/merge",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart", "merge"]
            }
          }
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-session-id",
                "value": "{{sessionId}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/cart",
              "host": ["{{baseUrl}}"],
              "path": ["api", "cart"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Category Management",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        },
        {
          "name": "Create Category",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('categoryId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Appetizers\",\n  \"description\": \"Delicious appetizers to start your meal\",\n  \"slug\": \"appetizers\",\n  \"isActive\": true,\n  \"displayOrder\": 1,\n  \"parentCategory\": null,\n  \"branchId\": \"{{branchId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories"]
            }
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Starters & Appetizers\",\n  \"description\": \"Updated description for appetizers\",\n  \"displayOrder\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        },
        {
          "name": "Get Category Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}", "products"]
            }
          }
        },
        {
          "name": "Get Category Product Counts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/counts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "counts"]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/categories/{{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "categories", "{{categoryId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Order Management",
      "item": [
        {
          "name": "Get All Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        },
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('orderId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{userId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"price\": 12.99,\n      \"selectedOptions\": {\n        \"size\": \"Large\",\n        \"toppings\": \"Extra Cheese\"\n      },\n      \"specialRequirements\": \"No onions\"\n    }\n  ],\n  \"orderType\": \"delivery\",\n  \"deliveryAddress\": {\n    \"street\": \"123 Customer St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"paymentMethod\": \"card\",\n  \"paymentStatus\": \"pending\",\n  \"specialInstructions\": \"Ring doorbell twice\",\n  \"subtotal\": 25.98,\n  \"tax\": 2.08,\n  \"deliveryFee\": 5.00,\n  \"total\": 33.06\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Update Order",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"estimatedDeliveryTime\": \"2024-01-15T19:30:00.000Z\",\n  \"paymentStatus\": \"paid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        },
        {
          "name": "Get My Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/myorders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "myorders"]
            }
          }
        },
        {
          "name": "Get Today's Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders/today",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "today"]
            }
          }
        },
        {
          "name": "Delete Order",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Product Management",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products?page=1&limit=10&category={{categoryId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "category",
                  "value": "{{categoryId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('productId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Margherita Pizza\",\n  \"description\": \"Classic pizza with fresh mozzarella, tomato sauce, and basil\",\n  \"price\": 14.99,\n  \"category\": \"{{categoryId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"images\": [],\n  \"allergens\": {\n    \"contains\": [\"gluten\", \"dairy\"],\n    \"mayContain\": [\"nuts\"]\n  },\n  \"availability\": {\n    \"monday\": true,\n    \"tuesday\": true,\n    \"wednesday\": true,\n    \"thursday\": true,\n    \"friday\": true,\n    \"saturday\": true,\n    \"sunday\": true\n  },\n  \"delivery\": true,\n  \"collection\": true,\n  \"dineIn\": true,\n  \"hideItem\": false,\n  \"weight\": \"350g\",\n  \"calorificValue\": 850,\n  \"calorieDetails\": {\n    \"protein\": 35,\n    \"carbs\": 95,\n    \"fat\": 28,\n    \"fiber\": 4\n  },\n  \"stockManagement\": {\n    \"isManaged\": true,\n    \"quantity\": 50,\n    \"lowStockThreshold\": 10\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Margherita Pizza - Premium\",\n  \"price\": 16.99,\n  \"description\": \"Premium Margherita pizza with organic ingredients\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Get Popular Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/popular?limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "popular"],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Get Recommended Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/recommended?userId={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "recommended"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Stock Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/stock/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "stock", "status"]
            }
          }
        },
        {
          "name": "Bulk Update Stock",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"updates\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 25,\n      \"operation\": \"set\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/stock/bulk-update",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "stock", "bulk-update"]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Report Management",
      "item": [
        {
          "name": "Get Dashboard Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/dashboard-summary?period=today&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "dashboard-summary"],
              "query": [
                {
                  "key": "period",
                  "value": "today",
                  "description": "today, yesterday, week, month, year"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get End of Night Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/end-of-night?date=2024-01-15&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "end-of-night"],
              "query": [
                {
                  "key": "date",
                  "value": "2024-01-15",
                  "description": "Date in YYYY-MM-DD format"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get End of Month Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/end-of-month?month=1&year=2024&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "end-of-month"],
              "query": [
                {
                  "key": "month",
                  "value": "1",
                  "description": "Month number (1-12)"
                },
                {
                  "key": "year",
                  "value": "2024",
                  "description": "Year"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get Sales History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/sales-history?startDate=2024-01-01&endDate=2024-01-31&branchId={{branchId}}&page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "sales-history"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date (optional)"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date (optional)"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Items per page"
                }
              ]
            }
          }
        },
        {
          "name": "Get Item Sales History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/item-sales-history?startDate=2024-01-01&endDate=2024-01-31&productId={{productId}}&categoryId={{categoryId}}&page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "item-sales-history"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date (optional)"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date (optional)"
                },
                {
                  "key": "productId",
                  "value": "{{productId}}",
                  "description": "Specific product filter (optional)"
                },
                {
                  "key": "categoryId",
                  "value": "{{categoryId}}",
                  "description": "Category filter (optional)"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Items per page"
                }
              ]
            }
          }
        },
        {
          "name": "Get Discount History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/discount-history?startDate=2024-01-01&endDate=2024-01-31&discountType=all&page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "discount-history"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date (optional)"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date (optional)"
                },
                {
                  "key": "discountType",
                  "value": "all",
                  "description": "all, first-order, loyalty, limited-time, free-wrap"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "50",
                  "description": "Items per page"
                }
              ]
            }
          }
        },
        {
          "name": "Get Outlet Reports",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/outlet-reports?branchId={{branchId}}&period=month",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "outlet-reports"],
              "query": [
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Required branch ID"
                },
                {
                  "key": "period",
                  "value": "month",
                  "description": "today, yesterday, week, month, year"
                }
              ]
            }
          }
        },
        {
          "name": "Get Custom Report - Menu Category Totals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/custom?type=menu-category-totals&startDate=2024-01-01&endDate=2024-01-31&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "custom"],
              "query": [
                {
                  "key": "type",
                  "value": "menu-category-totals",
                  "description": "Report type"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get Custom Report - Daily Totals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/custom?type=daily-totals&startDate=2024-01-01&endDate=2024-01-31&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "custom"],
              "query": [
                {
                  "key": "type",
                  "value": "daily-totals",
                  "description": "Report type"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        },
        {
          "name": "Get Custom Report - Order Export",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reports/custom?type=order-export&startDate=2024-01-01&endDate=2024-01-31&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reports", "custom"],
              "query": [
                {
                  "key": "type",
                  "value": "order-export",
                  "description": "Report type for complete order data export"
                },
                {
                  "key": "startDate",
                  "value": "2024-01-01",
                  "description": "Start date"
                },
                {
                  "key": "endDate",
                  "value": "2024-01-31",
                  "description": "End date"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}",
                  "description": "Optional branch filter"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "8. Reservation Management",
      "item": [
        {
          "name": "Get All Reservations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reservations?date=2024-01-15&branchId={{branchId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations"],
              "query": [
                {
                  "key": "date",
                  "value": "2024-01-15"
                },
                {
                  "key": "branchId",
                  "value": "{{branchId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Reservation by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/reservations/{{reservationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations", "{{reservationId}}"]
            }
          }
        },
        {
          "name": "Create Reservation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('reservationId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{userId}}\",\n  \"branchId\": \"{{branchId}}\",\n  \"date\": \"2024-01-15\",\n  \"time\": \"19:30\",\n  \"partySize\": 4,\n  \"specialRequests\": \"Birthday celebration - need a corner table\",\n  \"contactInfo\": {\n    \"name\": \"John Doe\",\n    \"phone\": \"+1234567890\",\n    \"email\": \"john.doe@example.com\"\n  },\n  \"tablePreference\": \"corner\",\n  \"occasion\": \"birthday\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/reservations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations"]
            }
          }
        },
        {
          "name": "Update Reservation Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\",\n  \"notes\": \"Confirmed for corner table as requested\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/reservations/{{reservationId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations", "{{reservationId}}", "status"]
            }
          }
        },
        {
          "name": "Cancel Reservation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Customer requested cancellation\",\n  \"notes\": \"Customer had to travel unexpectedly\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/reservations/{{reservationId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations", "{{reservationId}}", "cancel"]
            }
          }
        },
        {
          "name": "Get My Reservations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/reservations/myreservations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reservations", "myreservations"]
            }
          }
        }
      ]
    },
    {
      "name": "9. User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=10&role=user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "role",
                  "value": "user"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567891\",\n  \"address\": {\n    \"street\": \"456 Oak St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10003\",\n    \"country\": \"USA\"\n  },\n  \"roleId\": \"{{roleId}}\",\n  \"isActive\": true,\n  \"preferences\": {\n    \"newsletter\": true,\n    \"smsNotifications\": false,\n    \"dietaryRestrictions\": [\"vegetarian\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith Updated\",\n  \"phone\": \"+1234567892\",\n  \"preferences\": {\n    \"newsletter\": false,\n    \"smsNotifications\": true,\n    \"dietaryRestrictions\": [\"vegetarian\", \"gluten-free\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "10. Role Management",
      "item": [
        {
          "name": "Get All Roles",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/roles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles"]
            }
          }
        },
        {
          "name": "Get Role by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/roles/{{roleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles", "{{roleId}}"]
            }
          }
        },
        {
          "name": "Create Role",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('roleId', jsonData.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Kitchen Staff\",\n  \"slug\": \"kitchen-staff\",\n  \"description\": \"Kitchen staff members with access to order management\",\n  \"permissions\": [\n    \"view_orders\",\n    \"update_order_status\",\n    \"view_products\",\n    \"update_inventory\"\n  ],\n  \"isActive\": true,\n  \"level\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/roles",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles"]
            }
          }
        },
        {
          "name": "Update Role",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Senior Kitchen Staff\",\n  \"description\": \"Senior kitchen staff with additional permissions\",\n  \"permissions\": [\n    \"view_orders\",\n    \"update_order_status\",\n    \"view_products\",\n    \"update_inventory\",\n    \"manage_recipes\"\n  ],\n  \"level\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/roles/{{roleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles", "{{roleId}}"]
            }
          }
        },
        {
          "name": "Delete Role",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/roles/{{roleId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "roles", "{{roleId}}"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate session ID if not set",
          "if (!pm.environment.get('sessionId')) {",
          "    pm.environment.set('sessionId', 'guest_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9));",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test scripts",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has proper JSON structure', function () {",
          "    if (pm.response.code !== 204) {",
          "        pm.response.to.have.jsonBody();",
          "        pm.expect(pm.response.json()).to.have.property('success');",
          "    }",
          "});"
        ]
      }
    }
  ]
} 